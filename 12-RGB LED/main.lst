;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 6/20/2021 6:31:44 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF99  	GOTO        306
_Interrupt:
;main.c,59 :: 		void Interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;main.c,61 :: 		if (TMR0IF_bit){
0x000C	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x000E	0xD011      	BRA         L_Interrupt16
;main.c,62 :: 		TMR0IF_bit = 0;
0x0010	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;main.c,63 :: 		TMR0H         = 0x88;
0x0012	0x0E88      	MOVLW       136
0x0014	0x6ED7      	MOVWF       TMR0H 
;main.c,64 :: 		TMR0L         = 0x78;
0x0016	0x0E78      	MOVLW       120
0x0018	0x6ED6      	MOVWF       TMR0L 
;main.c,66 :: 		if(dutyLEDR) LEDR=1;
0x001A	0x521A      	MOVF        _dutyLEDR, 1 
0x001C	0xA4D8      	BTFSS       STATUS, 2 
0x001E	0x848B      	BSF         LATC2_bit, BitPos(LATC2_bit+0) 
L_Interrupt17:
;main.c,67 :: 		if(dutyLEDG) LEDG=1;
0x0020	0x5216      	MOVF        _dutyLEDG, 1 
0x0022	0xA4D8      	BTFSS       STATUS, 2 
0x0024	0x828B      	BSF         LATC1_bit, BitPos(LATC1_bit+0) 
L_Interrupt18:
;main.c,68 :: 		if(dutyLEDB) LEDB=1;
0x0026	0x5217      	MOVF        _dutyLEDB, 1 
0x0028	0xA4D8      	BTFSS       STATUS, 2 
0x002A	0x808C      	BSF         LATD0_bit, BitPos(LATD0_bit+0) 
L_Interrupt19:
;main.c,70 :: 		counterLEDR=0;
0x002C	0x6A1B      	CLRF        _counterLEDR 
;main.c,71 :: 		counterLEDG=0;
0x002E	0x6A18      	CLRF        _counterLEDG 
;main.c,72 :: 		counterLEDB=0;
0x0030	0x6A19      	CLRF        _counterLEDB 
;main.c,73 :: 		}
L_Interrupt16:
;main.c,75 :: 		if (TMR1IF_bit){
0x0032	0xA09E      	BTFSS       TMR1IF_bit, BitPos(TMR1IF_bit+0) 
0x0034	0xD01D      	BRA         L_Interrupt20
;main.c,76 :: 		TMR1IF_bit = 0;
0x0036	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;main.c,77 :: 		TMR1H         = 0xFF;
0x0038	0x0EFF      	MOVLW       255
0x003A	0x6ECF      	MOVWF       TMR1H 
;main.c,78 :: 		TMR1L         = 0x88;
0x003C	0x0E88      	MOVLW       136
0x003E	0x6ECE      	MOVWF       TMR1L 
;main.c,80 :: 		if(counterLEDR>=dutyLEDR) LEDR=0;
0x0040	0x501A      	MOVF        _dutyLEDR, 0 
0x0042	0x5C1B      	SUBWF       _counterLEDR, 0 
0x0044	0xB0D8      	BTFSC       STATUS, 0 
0x0046	0x948B      	BCF         LATC2_bit, BitPos(LATC2_bit+0) 
L_Interrupt21:
;main.c,81 :: 		if(counterLEDG>=dutyLEDG) LEDG=0;
0x0048	0x5016      	MOVF        _dutyLEDG, 0 
0x004A	0x5C18      	SUBWF       _counterLEDG, 0 
0x004C	0xB0D8      	BTFSC       STATUS, 0 
0x004E	0x928B      	BCF         LATC1_bit, BitPos(LATC1_bit+0) 
L_Interrupt22:
;main.c,82 :: 		if(counterLEDB>=dutyLEDB) LEDB=0;
0x0050	0x5017      	MOVF        _dutyLEDB, 0 
0x0052	0x5C19      	SUBWF       _counterLEDB, 0 
0x0054	0xB0D8      	BTFSC       STATUS, 0 
0x0056	0x908C      	BCF         LATD0_bit, BitPos(LATD0_bit+0) 
L_Interrupt23:
;main.c,84 :: 		if(counterLEDR<255) counterLEDR++;
0x0058	0x0EFF      	MOVLW       255
0x005A	0x5C1B      	SUBWF       _counterLEDR, 0 
0x005C	0xA0D8      	BTFSS       STATUS, 0 
0x005E	0x2A1B      	INCF        _counterLEDR, 1 
L_Interrupt24:
;main.c,85 :: 		if(counterLEDG<255) counterLEDG++;
0x0060	0x0EFF      	MOVLW       255
0x0062	0x5C18      	SUBWF       _counterLEDG, 0 
0x0064	0xA0D8      	BTFSS       STATUS, 0 
0x0066	0x2A18      	INCF        _counterLEDG, 1 
L_Interrupt25:
;main.c,86 :: 		if(counterLEDB<255) counterLEDB++;
0x0068	0x0EFF      	MOVLW       255
0x006A	0x5C19      	SUBWF       _counterLEDB, 0 
0x006C	0xA0D8      	BTFSS       STATUS, 0 
0x006E	0x2A19      	INCF        _counterLEDB, 1 
L_Interrupt26:
;main.c,87 :: 		}
L_Interrupt20:
;main.c,89 :: 		}
L_end_Interrupt:
L__Interrupt36:
0x0070	0xF000C015  	MOVFF       21, R0
0x0074	0x0011      	RETFIE      1
; end of _Interrupt
_wait:
;main.c,11 :: 		void wait(unsigned int time){
;main.c,12 :: 		while(time--)
L_wait0:
0x0076	0xF000C01F  	MOVFF       FARG_wait_time, R0
0x007A	0xF001C020  	MOVFF       FARG_wait_time+1, R1
0x007E	0x0E01      	MOVLW       1
0x0080	0x5E1F      	SUBWF       FARG_wait_time, 1 
0x0082	0x0E00      	MOVLW       0
0x0084	0x5A20      	SUBWFB      FARG_wait_time+1, 1 
0x0086	0x5000      	MOVF        R0, 0 
0x0088	0x1001      	IORWF       R1, 0 
0x008A	0xE00A      	BZ          L_wait1
;main.c,13 :: 		delay_ms(1);
0x008C	0x0E10      	MOVLW       16
0x008E	0x6E0C      	MOVWF       R12, 0
0x0090	0x0E94      	MOVLW       148
0x0092	0x6E0D      	MOVWF       R13, 0
L_wait2:
0x0094	0x2E0D      	DECFSZ      R13, 1, 0
0x0096	0xD7FE      	BRA         L_wait2
0x0098	0x2E0C      	DECFSZ      R12, 1, 0
0x009A	0xD7FC      	BRA         L_wait2
0x009C	0x0000      	NOP
0x009E	0xD7EB      	BRA         L_wait0
L_wait1:
;main.c,14 :: 		}
L_end_wait:
0x00A0	0x0012      	RETURN      0
; end of _wait
_InitTimer1:
;main.c,49 :: 		void InitTimer1(){
;main.c,50 :: 		T1CON      = 0x01;
0x00A2	0x0E01      	MOVLW       1
0x00A4	0x6ECD      	MOVWF       T1CON 
;main.c,51 :: 		TMR1IF_bit = 0;
0x00A6	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;main.c,52 :: 		TMR1H             = 0xFF;
0x00A8	0x0EFF      	MOVLW       255
0x00AA	0x6ECF      	MOVWF       TMR1H 
;main.c,53 :: 		TMR1L      = 0x88;
0x00AC	0x0E88      	MOVLW       136
0x00AE	0x6ECE      	MOVWF       TMR1L 
;main.c,54 :: 		TMR1IE_bit = 1;
0x00B0	0x809D      	BSF         TMR1IE_bit, BitPos(TMR1IE_bit+0) 
;main.c,55 :: 		INTCON     = 0xC0;
0x00B2	0x0EC0      	MOVLW       192
0x00B4	0x6EF2      	MOVWF       INTCON 
;main.c,56 :: 		}
L_end_InitTimer1:
0x00B6	0x0012      	RETURN      0
; end of _InitTimer1
_AnimateRGB:
;main.c,27 :: 		void AnimateRGB(unsigned short R,unsigned short G,unsigned short B){
;main.c,28 :: 		while((dutyLEDR != R)|| (dutyLEDG != G)||(dutyLEDB != B)){
L_AnimateRGB3:
0x00B8	0x501A      	MOVF        _dutyLEDR, 0 
0x00BA	0x181C      	XORWF       FARG_AnimateRGB_R, 0 
0x00BC	0xE107      	BNZ         L__AnimateRGB29
0x00BE	0x5016      	MOVF        _dutyLEDG, 0 
0x00C0	0x181D      	XORWF       FARG_AnimateRGB_G, 0 
0x00C2	0xE104      	BNZ         L__AnimateRGB29
0x00C4	0x5017      	MOVF        _dutyLEDB, 0 
0x00C6	0x181E      	XORWF       FARG_AnimateRGB_B, 0 
0x00C8	0xE101      	BNZ         L__AnimateRGB29
0x00CA	0xD021      	BRA         L_AnimateRGB4
L__AnimateRGB29:
;main.c,29 :: 		if(R>dutyLEDR) dutyLEDR++;
0x00CC	0x501C      	MOVF        FARG_AnimateRGB_R, 0 
0x00CE	0x5C1A      	SUBWF       _dutyLEDR, 0 
0x00D0	0xE202      	BC          L_AnimateRGB7
0x00D2	0x2A1A      	INCF        _dutyLEDR, 1 
0x00D4	0xD004      	BRA         L_AnimateRGB8
L_AnimateRGB7:
;main.c,30 :: 		else if(R<dutyLEDR) dutyLEDR--;
0x00D6	0x501A      	MOVF        _dutyLEDR, 0 
0x00D8	0x5C1C      	SUBWF       FARG_AnimateRGB_R, 0 
0x00DA	0xA0D8      	BTFSS       STATUS, 0 
0x00DC	0x061A      	DECF        _dutyLEDR, 1 
L_AnimateRGB9:
L_AnimateRGB8:
;main.c,32 :: 		if(G>dutyLEDG) dutyLEDG++;
0x00DE	0x501D      	MOVF        FARG_AnimateRGB_G, 0 
0x00E0	0x5C16      	SUBWF       _dutyLEDG, 0 
0x00E2	0xE202      	BC          L_AnimateRGB10
0x00E4	0x2A16      	INCF        _dutyLEDG, 1 
0x00E6	0xD004      	BRA         L_AnimateRGB11
L_AnimateRGB10:
;main.c,33 :: 		else if(G<dutyLEDG) dutyLEDG--;
0x00E8	0x5016      	MOVF        _dutyLEDG, 0 
0x00EA	0x5C1D      	SUBWF       FARG_AnimateRGB_G, 0 
0x00EC	0xA0D8      	BTFSS       STATUS, 0 
0x00EE	0x0616      	DECF        _dutyLEDG, 1 
L_AnimateRGB12:
L_AnimateRGB11:
;main.c,35 :: 		if(B>dutyLEDB) dutyLEDB++;
0x00F0	0x501E      	MOVF        FARG_AnimateRGB_B, 0 
0x00F2	0x5C17      	SUBWF       _dutyLEDB, 0 
0x00F4	0xE202      	BC          L_AnimateRGB13
0x00F6	0x2A17      	INCF        _dutyLEDB, 1 
0x00F8	0xD004      	BRA         L_AnimateRGB14
L_AnimateRGB13:
;main.c,36 :: 		else if(B<dutyLEDB) dutyLEDB--;
0x00FA	0x5017      	MOVF        _dutyLEDB, 0 
0x00FC	0x5C1E      	SUBWF       FARG_AnimateRGB_B, 0 
0x00FE	0xA0D8      	BTFSS       STATUS, 0 
0x0100	0x0617      	DECF        _dutyLEDB, 1 
L_AnimateRGB15:
L_AnimateRGB14:
;main.c,38 :: 		wait(10);
0x0102	0x0E0A      	MOVLW       10
0x0104	0x6E1F      	MOVWF       FARG_wait_time 
0x0106	0x0E00      	MOVLW       0
0x0108	0x6E20      	MOVWF       FARG_wait_time+1 
0x010A	0xDFB5      	RCALL       _wait
;main.c,39 :: 		}
0x010C	0xD7D5      	BRA         L_AnimateRGB3
L_AnimateRGB4:
;main.c,40 :: 		}
L_end_AnimateRGB:
0x010E	0x0012      	RETURN      0
; end of _AnimateRGB
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0110	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0112	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0116	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0118	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x011A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x011C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x011E	0x0012      	RETURN      0
; end of ___CC2DW
_InitTimer0:
;main.c,42 :: 		void InitTimer0(){
;main.c,43 :: 		T0CON             = 0x88;
0x0120	0x0E88      	MOVLW       136
0x0122	0x6ED5      	MOVWF       T0CON 
;main.c,44 :: 		TMR0H             = 0x88;
0x0124	0x0E88      	MOVLW       136
0x0126	0x6ED7      	MOVWF       TMR0H 
;main.c,45 :: 		TMR0L      = 0x78;
0x0128	0x0E78      	MOVLW       120
0x012A	0x6ED6      	MOVWF       TMR0L 
;main.c,46 :: 		GIE_bit    = 1;
0x012C	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;main.c,47 :: 		TMR0IE_bit = 1;
0x012E	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;main.c,48 :: 		}
L_end_InitTimer0:
0x0130	0x0012      	RETURN      0
; end of _InitTimer0
_main:
0x0132	0x6A16      	CLRF        _dutyLEDG 
0x0134	0x6A17      	CLRF        _dutyLEDB 
0x0136	0x6A18      	CLRF        _counterLEDG 
0x0138	0x6A19      	CLRF        _counterLEDB 
0x013A	0x6A1A      	CLRF        _dutyLEDR 
0x013C	0x6A1B      	CLRF        _counterLEDR 
;main.c,90 :: 		void main() {
;main.c,91 :: 		TRISA=0b00000000; // [][][][LED][][][][]
0x013E	0x6A92      	CLRF        TRISA 
;main.c,92 :: 		TRISC=0b00000000; // [][][][][][LEDR][LEDG][]
0x0140	0x6A94      	CLRF        TRISC 
;main.c,93 :: 		TRISD=0b00000000; // [][][][][][][][LEDB]
0x0142	0x6A95      	CLRF        TRISD 
;main.c,95 :: 		LATA=0x00;
0x0144	0x6A89      	CLRF        LATA 
;main.c,96 :: 		LATC=0x00;
0x0146	0x6A8B      	CLRF        LATC 
;main.c,97 :: 		LATD=0x00;
0x0148	0x6A8C      	CLRF        LATD 
;main.c,107 :: 		InitTimer0();
0x014A	0xDFEA      	RCALL       _InitTimer0
;main.c,108 :: 		InitTimer1();
0x014C	0xDFAA      	RCALL       _InitTimer1
;main.c,110 :: 		while(1){
L_main27:
;main.c,142 :: 		AnimateRGB(255,0,0);
0x014E	0x0EFF      	MOVLW       255
0x0150	0x6E1C      	MOVWF       FARG_AnimateRGB_R 
0x0152	0x6A1D      	CLRF        FARG_AnimateRGB_G 
0x0154	0x6A1E      	CLRF        FARG_AnimateRGB_B 
0x0156	0xDFB0      	RCALL       _AnimateRGB
;main.c,143 :: 		AnimateRGB(0,255,0);
0x0158	0x6A1C      	CLRF        FARG_AnimateRGB_R 
0x015A	0x0EFF      	MOVLW       255
0x015C	0x6E1D      	MOVWF       FARG_AnimateRGB_G 
0x015E	0x6A1E      	CLRF        FARG_AnimateRGB_B 
0x0160	0xDFAB      	RCALL       _AnimateRGB
;main.c,144 :: 		AnimateRGB(0,0,255);
0x0162	0x6A1C      	CLRF        FARG_AnimateRGB_R 
0x0164	0x6A1D      	CLRF        FARG_AnimateRGB_G 
0x0166	0x0EFF      	MOVLW       255
0x0168	0x6E1E      	MOVWF       FARG_AnimateRGB_B 
0x016A	0xDFA6      	RCALL       _AnimateRGB
;main.c,145 :: 		AnimateRGB(255,127,0);
0x016C	0x0EFF      	MOVLW       255
0x016E	0x6E1C      	MOVWF       FARG_AnimateRGB_R 
0x0170	0x0E7F      	MOVLW       127
0x0172	0x6E1D      	MOVWF       FARG_AnimateRGB_G 
0x0174	0x6A1E      	CLRF        FARG_AnimateRGB_B 
0x0176	0xDFA0      	RCALL       _AnimateRGB
;main.c,146 :: 		AnimateRGB(255,0,150);
0x0178	0x0EFF      	MOVLW       255
0x017A	0x6E1C      	MOVWF       FARG_AnimateRGB_R 
0x017C	0x6A1D      	CLRF        FARG_AnimateRGB_G 
0x017E	0x0E96      	MOVLW       150
0x0180	0x6E1E      	MOVWF       FARG_AnimateRGB_B 
0x0182	0xDF9A      	RCALL       _AnimateRGB
;main.c,147 :: 		AnimateRGB(255,255,255);
0x0184	0x0EFF      	MOVLW       255
0x0186	0x6E1C      	MOVWF       FARG_AnimateRGB_R 
0x0188	0x0EFF      	MOVLW       255
0x018A	0x6E1D      	MOVWF       FARG_AnimateRGB_G 
0x018C	0x0EFF      	MOVLW       255
0x018E	0x6E1E      	MOVWF       FARG_AnimateRGB_B 
0x0190	0xDF93      	RCALL       _AnimateRGB
;main.c,148 :: 		}
0x0192	0xD7DD      	BRA         L_main27
;main.c,149 :: 		}
L_end_main:
0x0194	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [110]    _Interrupt
0x0076      [44]    _wait
0x00A2      [22]    _InitTimer1
0x00B8      [88]    _AnimateRGB
0x0110      [16]    ___CC2DW
0x0120      [18]    _InitTimer0
0x0132     [100]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _dutyLEDG
0x0017       [1]    _dutyLEDB
0x0018       [1]    _counterLEDG
0x0019       [1]    _counterLEDB
0x001A       [1]    _dutyLEDR
0x001B       [1]    _counterLEDR
0x001C       [1]    FARG_AnimateRGB_R
0x001D       [1]    FARG_AnimateRGB_G
0x001E       [1]    FARG_AnimateRGB_B
0x001F       [2]    FARG_wait_time
0x0F89       [1]    LATA
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LEDG
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LEDR
0x0F8C       [0]    LATD0_bit
0x0F8C       [1]    LATD
0x0F8C       [0]    LEDB
0x0F92       [1]    TRISA
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F9D       [0]    TMR1IE_bit
0x0F9E       [0]    TMR1IF_bit
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
