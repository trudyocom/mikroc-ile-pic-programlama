;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 6/22/2021 9:46:48 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF6C  	GOTO        216
_Interrupt:
;main.c,22 :: 		void Interrupt(){
;main.c,24 :: 		if (TMR0IF_bit){
0x0008	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x000A	0xD006      	BRA         L_Interrupt3
;main.c,25 :: 		TMR0IF_bit = 0;
0x000C	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;main.c,26 :: 		TMR0H	 = 0x48;
0x000E	0x0E48      	MOVLW       72
0x0010	0x6ED7      	MOVWF       TMR0H 
;main.c,27 :: 		TMR0L	 = 0xE5;
0x0012	0x0EE5      	MOVLW       229
0x0014	0x6ED6      	MOVWF       TMR0L 
;main.c,30 :: 		TMR0IE_bit=0;
0x0016	0x9AF2      	BCF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;main.c,31 :: 		}
L_Interrupt3:
;main.c,32 :: 		}
L_end_Interrupt:
L__Interrupt14:
0x0018	0x0011      	RETFIE      1
; end of _Interrupt
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x001A	0x0E57      	MOVLW       87
0x001C	0x6E0D      	MOVWF       R13, 0
L_Delay_22us2:
0x001E	0x2E0D      	DECFSZ      R13, 1, 0
0x0020	0xD7FE      	BRA         L_Delay_22us2
0x0022	0x0000      	NOP
0x0024	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0026	0x0012      	RETURN      0
; end of _Delay_22us
_wait:
;main.c,6 :: 		void wait(unsigned int time){
;main.c,7 :: 		while(time--)
L_wait0:
0x0028	0xF000C01E  	MOVFF       FARG_wait_time, R0
0x002C	0xF001C01F  	MOVFF       FARG_wait_time+1, R1
0x0030	0x0E01      	MOVLW       1
0x0032	0x5E1E      	SUBWF       FARG_wait_time, 1 
0x0034	0x0E00      	MOVLW       0
0x0036	0x5A1F      	SUBWFB      FARG_wait_time+1, 1 
0x0038	0x5000      	MOVF        R0, 0 
0x003A	0x1001      	IORWF       R1, 0 
0x003C	0xE00A      	BZ          L_wait1
;main.c,8 :: 		delay_ms(1);
0x003E	0x0E10      	MOVLW       16
0x0040	0x6E0C      	MOVWF       R12, 0
0x0042	0x0E94      	MOVLW       148
0x0044	0x6E0D      	MOVWF       R13, 0
L_wait2:
0x0046	0x2E0D      	DECFSZ      R13, 1, 0
0x0048	0xD7FE      	BRA         L_wait2
0x004A	0x2E0C      	DECFSZ      R12, 1, 0
0x004C	0xD7FC      	BRA         L_wait2
0x004E	0x0000      	NOP
0x0050	0xD7EB      	BRA         L_wait0
L_wait1:
;main.c,9 :: 		}
L_end_wait:
0x0052	0x0012      	RETURN      0
; end of _wait
_InitTimer0:
;main.c,14 :: 		void InitTimer0(){
;main.c,15 :: 		T0CON	 = 0x87;
0x0054	0x0E87      	MOVLW       135
0x0056	0x6ED5      	MOVWF       T0CON 
;main.c,16 :: 		TMR0H	 = 0x48;
0x0058	0x0E48      	MOVLW       72
0x005A	0x6ED7      	MOVWF       TMR0H 
;main.c,17 :: 		TMR0L	 = 0xE5;
0x005C	0x0EE5      	MOVLW       229
0x005E	0x6ED6      	MOVWF       TMR0L 
;main.c,18 :: 		GIE_bit	 = 1;
0x0060	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;main.c,19 :: 		TMR0IE_bit	 = 1;
0x0062	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;main.c,20 :: 		}
L_end_InitTimer0:
0x0064	0x0012      	RETURN      0
; end of _InitTimer0
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0066	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0068	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x006C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x006E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0070	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0072	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0074	0x0012      	RETURN      0
; end of ___CC2DW
_ADC_Init:
;__Lib_ADC_A_D.c,13 :: 		
;__Lib_ADC_A_D.c,14 :: 		
0x0076	0x0EFF      	MOVLW       _ADC_Get_Sample
0x0078	0x6E18      	MOVWF       _ADC_Get_Sample_Ptr 
0x007A	0x0EFF      	MOVLW       hi_addr(_ADC_Get_Sample)
0x007C	0x6E19      	MOVWF       _ADC_Get_Sample_Ptr+1 
0x007E	0x0EFF      	MOVLW       FARG_ADC_Get_Sample_channel
0x0080	0x6E1A      	MOVWF       _ADC_Get_Sample_Ptr+2 
0x0082	0x0EFF      	MOVLW       hi_addr(FARG_ADC_Get_Sample_channel)
0x0084	0x6E1B      	MOVWF       _ADC_Get_Sample_Ptr+3 
;__Lib_ADC_A_D.c,16 :: 		
0x0086	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,17 :: 		
0x0088	0x1C15      	COMF        _vref_mask, 0 
0x008A	0x6E00      	MOVWF       R0 
0x008C	0x5000      	MOVF        R0, 0 
0x008E	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,18 :: 		
0x0090	0x0E07      	MOVLW       7
0x0092	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,19 :: 		
0x0094	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,20 :: 		
0x0096	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,21 :: 		
L_end_ADC_Init:
0x0098	0x0012      	RETURN      0
; end of _ADC_Init
_ADC_Read:
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,54 :: 		
0x009A	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,55 :: 		
0x009C	0x1C15      	COMF        _vref_mask, 0 
0x009E	0x6E00      	MOVWF       R0 
0x00A0	0x5000      	MOVF        R0, 0 
0x00A2	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,56 :: 		
0x00A4	0x0E07      	MOVLW       7
0x00A6	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,57 :: 		
0x00A8	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,58 :: 		
0x00AA	0xF000C01E  	MOVFF       FARG_ADC_Read_channel, R0
0x00AE	0x3600      	RLCF        R0, 1 
0x00B0	0x9000      	BCF         R0, 0 
0x00B2	0x3600      	RLCF        R0, 1 
0x00B4	0x9000      	BCF         R0, 0 
0x00B6	0x5000      	MOVF        R0, 0 
0x00B8	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,59 :: 		
0x00BA	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,60 :: 		
0x00BC	0xDFAE      	RCALL       _Delay_22us
;__Lib_ADC_A_D.c,61 :: 		
0x00BE	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,62 :: 		
L_ADC_Read2:
0x00C0	0xA2C2      	BTFSS       ADCON0, 1 
0x00C2	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,63 :: 		
0x00C4	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,64 :: 		
0x00C6	0xF001CFC4  	MOVFF       ADRESH, R1
0x00CA	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,65 :: 		
0x00CC	0x50C3      	MOVF        ADRESL, 0 
0x00CE	0x1200      	IORWF       R0, 1 
0x00D0	0x0E00      	MOVLW       0
0x00D2	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,66 :: 		
0x00D4	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,68 :: 		
;__Lib_ADC_A_D.c,69 :: 		
L_end_ADC_Read:
0x00D6	0x0012      	RETURN      0
; end of _ADC_Read
_main:
0x00D8	0xF000ECA9  	CALL        338, 0
;main.c,34 :: 		void main() {
;main.c,35 :: 		TRISA=0b00000001; // [][][][LED][][][][SOUND]
0x00DC	0x0E01      	MOVLW       1
0x00DE	0x6E92      	MOVWF       TRISA 
;main.c,37 :: 		LATA=0x00;
0x00E0	0x6A89      	CLRF        LATA 
;main.c,39 :: 		ADC_Init();
0x00E2	0xDFC9      	RCALL       _ADC_Init
;main.c,41 :: 		while(1){
L_main4:
;main.c,42 :: 		temp=ADC_Read(0);
0x00E4	0x6A1E      	CLRF        FARG_ADC_Read_channel 
0x00E6	0xDFD9      	RCALL       _ADC_Read
0x00E8	0xF01CC000  	MOVFF       R0, _temp
0x00EC	0xF01DC001  	MOVFF       R1, _temp+1
;main.c,43 :: 		if(temp<100){
0x00F0	0x0E00      	MOVLW       0
0x00F2	0x5C01      	SUBWF       R1, 0 
0x00F4	0xE102      	BNZ         L__main16
0x00F6	0x0E64      	MOVLW       100
0x00F8	0x5C00      	SUBWF       R0, 0 
L__main16:
0x00FA	0xE20A      	BC          L_main6
;main.c,45 :: 		wait(50);
0x00FC	0x0E32      	MOVLW       50
0x00FE	0x6E1E      	MOVWF       FARG_wait_time 
0x0100	0x0E00      	MOVLW       0
0x0102	0x6E1F      	MOVWF       FARG_wait_time+1 
0x0104	0xDF91      	RCALL       _wait
;main.c,47 :: 		counter=1;
0x0106	0x0E01      	MOVLW       1
0x0108	0x6E16      	MOVWF       _counter 
0x010A	0x0E00      	MOVLW       0
0x010C	0x6E17      	MOVWF       _counter+1 
;main.c,48 :: 		InitTimer0();
0x010E	0xDFA2      	RCALL       _InitTimer0
;main.c,49 :: 		}
L_main6:
;main.c,50 :: 		while(TMR0IE_bit){
L_main7:
0x0110	0xAAF2      	BTFSS       TMR0IE_bit, BitPos(TMR0IE_bit+0) 
0x0112	0xD014      	BRA         L_main8
;main.c,51 :: 		temp=ADC_Read(0);
0x0114	0x6A1E      	CLRF        FARG_ADC_Read_channel 
0x0116	0xDFC1      	RCALL       _ADC_Read
0x0118	0xF01CC000  	MOVFF       R0, _temp
0x011C	0xF01DC001  	MOVFF       R1, _temp+1
;main.c,52 :: 		if(temp<100){
0x0120	0x0E00      	MOVLW       0
0x0122	0x5C01      	SUBWF       R1, 0 
0x0124	0xE102      	BNZ         L__main17
0x0126	0x0E64      	MOVLW       100
0x0128	0x5C00      	SUBWF       R0, 0 
L__main17:
0x012A	0xE207      	BC          L_main9
;main.c,53 :: 		counter++;
0x012C	0x4A16      	INFSNZ      _counter, 1 
0x012E	0x2A17      	INCF        _counter+1, 1 
;main.c,54 :: 		wait(50);
0x0130	0x0E32      	MOVLW       50
0x0132	0x6E1E      	MOVWF       FARG_wait_time 
0x0134	0x0E00      	MOVLW       0
0x0136	0x6E1F      	MOVWF       FARG_wait_time+1 
0x0138	0xDF77      	RCALL       _wait
;main.c,55 :: 		}
L_main9:
;main.c,56 :: 		}
0x013A	0xD7EA      	BRA         L_main7
L_main8:
;main.c,58 :: 		if(counter==2) LED=!LED;
0x013C	0x0E00      	MOVLW       0
0x013E	0x1817      	XORWF       _counter+1, 0 
0x0140	0xE102      	BNZ         L__main18
0x0142	0x0E02      	MOVLW       2
0x0144	0x1816      	XORWF       _counter, 0 
L__main18:
0x0146	0xB4D8      	BTFSC       STATUS, 2 
0x0148	0x7889      	BTG         LATA4_bit, BitPos(LATA4_bit+0) 
L_main10:
;main.c,59 :: 		counter=0;
0x014A	0x6A16      	CLRF        _counter 
0x014C	0x6A17      	CLRF        _counter+1 
;main.c,60 :: 		}
0x014E	0xD7CA      	BRA         L_main4
;main.c,61 :: 		}
L_end_main:
0x0150	0xD7FF      	BRA         $+0
; end of _main
0x0152	0xF015EE10  	LFSR        1, 21
0x0156	0x0E01      	MOVLW       1
0x0158	0x6E00      	MOVWF       R0 
0x015A	0x0E01      	MOVLW       1
0x015C	0x6E01      	MOVWF       R1 
0x015E	0x0E06      	MOVLW       6
0x0160	0x6EF6      	MOVWF       4086 
0x0162	0x0E00      	MOVLW       0
0x0164	0x6EF7      	MOVWF       TBLPTRH 
0x0166	0x0E00      	MOVLW       0
0x0168	0x6EF8      	MOVWF       TBLPTRU 
0x016A	0xF000EC33  	CALL        102, 0
0x016E	0x0012      	RETURN      0
;__Lib_ADC_A_D.c,0 :: ?ICS_vref_mask
0x0006	0x30 ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [18]    _Interrupt
0x001A      [14]    _Delay_22us
0x0028      [44]    _wait
0x0054      [18]    _InitTimer0
0x0066      [16]    ___CC2DW
0x0076      [36]    _ADC_Init
0x009A      [62]    _ADC_Read
0x00D8     [122]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0001       [1]    R1
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    R4
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _vref_mask
0x0016       [2]    _counter
0x0018       [4]    _ADC_Get_Sample_Ptr
0x001C       [2]    _temp
0x001E       [1]    FARG_ADC_Read_channel
0x001E       [2]    FARG_wait_time
0x0F89       [0]    LATA4_bit
0x0F89       [1]    LATA
0x0F89       [0]    LED
0x0F92       [1]    TRISA
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0006       [1]    ?ICS_vref_mask
